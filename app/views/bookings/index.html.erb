<div class="booking-headers">
  <h1>Available Booking</h1>
  <%= link_to 'Request a driver', new_booking_path, class: "alternate-link" %>
</div>

<div id="map"></div>

<% @bookings.each do |booking| %>
  <div class="current-booking">
    <%= booking.passenger.profile.first_name %>
    <span><%= time_ago_in_words(booking.created_at) %> ago</span><br />
    <li><%= booking.origin_address %></li>
    <%= link_to 'Boot Scoot!', booking_path(booking), method: :patch, class: 'main-button' %>
  </div>
<% end %>

<%= javascript_tag do %>

  var map, infoWindow;
  function initMap() {

    // pass in locations
    const locations = <%= raw @locations.to_json %>
    locations.forEach((local) => {
        local.lng = parseFloat(local.lng)
        local.lat = parseFloat(local.lat)
    })

    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -37.8182119, lng: 144.9543325},
      zoom: 13,
      styles: <%= render 'min_map_style' %>
    });

    var icon = {
      url: "https://image.flaticon.com/icons/svg/832/832793.svg",
      scaledSize: new google.maps.Size(32, 32), // scaled size
      origin: new google.maps.Point(0, 0), // origin
      anchor: new google.maps.Point(0, 0) // anchor
    };

    // markers for each location
    locations.map((location, i) => {
      return new google.maps.Marker({
        position: location,
        //label: location.name,
        animation: google.maps.Animation.DROP,
        icon: icon,
        map: map
      });
    });
    
    function toggleBounce() {
      if (marker.getAnimation() !== null) {
        marker.setAnimation(null);
      } else {
        marker.setAnimation(google.maps.Animation.BOUNCE);
      }
    }

    infoWindow = new google.maps.InfoWindow;

    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        infoWindow.setPosition(pos);
        infoWindow.setContent('Location found.');
        infoWindow.open(map);
        map.setCenter(pos);
        map.setZoom(15);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
  console.table(locations)
  }


  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
                          'Error: The Geolocation service failed.' :
                          'Error: Your browser doesn\'t support geolocation.');
    infoWindow.open(map);
  }
<% end %>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV.fetch('GOOGLE_MAPS_API') %>&callback=initMap">
</script>