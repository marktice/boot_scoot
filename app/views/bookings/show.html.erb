<h1>Booking</h1>
<p>Status: <%= @booking.status %></p>

<% if @booking.payed_at.nil? %>
  <%= render 'charge_form', booking: @booking %>
<% end %>

<div id="map"></div>
<div id="driver-panel"></div>

<%# Show OTHER users details %>
<% if current_user == @booking.passenger %>
  <%# check if theres no driver %>
  <% if @booking.driver != nil %>
    <%# check that driver has an image (will break if doesnt) %>
    <%= image_tag @booking.driver.profile.avatar_image_url(:thumb) if @booking.driver.profile.avatar_image_data != nil %><br />
    Driver: <%= @booking.driver.profile.first_name %><br />
    Rating: <%= sprintf("%0.2f", @booking.driver.average_driver_rating) %><br />
  <% end %>

<% elsif current_user == @booking.driver %>
  <%= image_tag @booking.passenger.profile.avatar_image_url(:thumb) if @booking.passenger.profile.avatar_image_data != nil %><br />
  Passenger: <%= @booking.passenger.profile.first_name %><br />
  Rating: <%= sprintf("%0.2f", @booking.passenger.average_passenger_rating) %><br />
<% end %>

Distance: <%= sprintf("%0.2f", @booking.distance) %> km<br />
Cost: $<%= sprintf("%0.2f", @booking.cost) %><br />

<% if @booking.driver != nil %>  
  <div>
    <%= link_to 'Complete', new_booking_review_path(@booking), class: 'main-button' %>
  </div>
<% end %>

<!-- Other details not needed to be displayed
Origin(from booking): <%= @booking.origin_address %><br />
Origin(from location): <%= @booking.origin.address %><br />
Latitude: <%= @booking.origin.latitude %><br />
Longitude: <%= @booking.origin.longitude %><br />

Destination(from booking): <%= @booking.destination_address %><br />
Destination(from location): <%= @booking.destination.address %><br />
Latitude: <%= @booking.destination.latitude %><br />
Longitude: <%= @booking.destination.longitude %><br />
-->

<%= javascript_tag do %>
  function initMap() {
    var directionsDisplay = new google.maps.DirectionsRenderer;
    var directionsService = new google.maps.DirectionsService;
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 14,
      //center: {lat: 37.77, lng: -122.447}
    });
    directionsDisplay.setMap(map);
    calculateAndDisplayRoute(directionsService, directionsDisplay);

    // directions panel for driver
    <% if current_user == @booking.driver %>
      directionsDisplay.setPanel(document.getElementById('driver-panel'));
    <% end %>
  }

  function calculateAndDisplayRoute(directionsService, directionsDisplay) {

    const jsorigin = <%= raw @booking.origin.to_json %>
    const jsdestination = <%= raw @booking.destination.to_json %>

    directionsService.route({
      origin: {lat: parseFloat(jsorigin.latitude), lng: parseFloat(jsorigin.longitude)},
      destination: {lat: parseFloat(jsdestination.latitude), lng: parseFloat(jsdestination.longitude)},  
      travelMode: 'DRIVING'
    }, function(response, status) {
      if (status == 'OK') {
        directionsDisplay.setDirections(response);
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
    console.table(jsorigin)
    console.table(jsdestination)
  }
<% end %>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV.fetch('GOOGLE_MAPS_API') %>&callback=initMap">
</script>