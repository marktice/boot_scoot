<p>Status: <%= @booking.status %></p>

<p>Distance: <%= sprintf("%0.2f", @booking.distance) %> km</p>
<p>Cost: $<%= sprintf("%0.2f", @booking.cost) %></p>

<% if @booking.payed_at.nil? %>
  <%= render 'charge_form', booking: @booking %>
<% end %>

<%= render 'user_card' %>

<% unless @booking.driver.nil? %>
  <div>
    <%= link_to 'Complete', new_booking_review_path(@booking), class: 'main-button' %>
  </div>
<% end %>

<div id="map"></div>
<div id="driver-panel"></div>

<%= javascript_tag do %>
  function initMap() {
    var directionsDisplay = new google.maps.DirectionsRenderer;
    var directionsService = new google.maps.DirectionsService;
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 14,
      //center: {lat: 37.77, lng: -122.447},
      styles: <%= render 'map_style' %>
    });
    directionsDisplay.setMap(map);
    calculateAndDisplayRoute(directionsService, directionsDisplay);

    // directions panel for driver
    <% if current_user == @booking.driver %>
      directionsDisplay.setPanel(document.getElementById('driver-panel'));
    <% end %>
  }

  function calculateAndDisplayRoute(directionsService, directionsDisplay) {

    const jsorigin = <%= raw @booking.origin.to_json %>
    const jsdestination = <%= raw @booking.destination.to_json %>

    directionsService.route({
      origin: {lat: parseFloat(jsorigin.latitude), lng: parseFloat(jsorigin.longitude)},
      destination: {lat: parseFloat(jsdestination.latitude), lng: parseFloat(jsdestination.longitude)},  
      travelMode: 'DRIVING'
    }, function(response, status) {
      if (status == 'OK') {
        directionsDisplay.setDirections(response);
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
    console.table(jsorigin)
    console.table(jsdestination)
  }
<% end %>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV.fetch('GOOGLE_MAPS_API') %>&callback=initMap">
</script>